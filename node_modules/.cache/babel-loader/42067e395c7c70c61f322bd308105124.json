{"remainingRequest":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/babel-loader/lib/index.js!/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/vue-app/src/components/EmployeeForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/vue-app/src/components/EmployeeForm.vue","mtime":1632382251282},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/babel-loader/lib/index.js","mtime":1623991178718},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js","mtime":1631742056592}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy95aXFpbmcvRG93bmxvYWRzL3Z1ZS10ZXN0L3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2VtcGxveWVlLWZvcm0nLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdWJtaXR0aW5nOiBmYWxzZSwKICAgICAgZXJyb3I6IGZhbHNlLAogICAgICBzdWNjZXNzOiBmYWxzZSwKICAgICAgc2hhcGVmaWxlOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgZmlsZTogJycKICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpbnZhbGlkTmFtZTogZnVuY3Rpb24gaW52YWxpZE5hbWUoKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2hhcGVmaWxlLm5hbWUpOwogICAgICByZXR1cm4gdGhpcy5zaGFwZWZpbGUubmFtZSA9PT0gJyc7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGxvYWRGaWxlU2F2ZTogZnVuY3Rpb24gdXBsb2FkRmlsZVNhdmUoZXZlbnQpIHsKICAgICAgY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LmZpbGVzWzBdKTsKICAgICAgdGhpcy5zaGFwZWZpbGUuZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgIH0sCiAgICBjcmVhdGVGaWxlVXBsb2FkOiBmdW5jdGlvbiBjcmVhdGVGaWxlVXBsb2FkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgTVlfQUNDRVNTX1RPS0VOLCBtYnhVcGxvYWRzLCBtYnhDbGllbnQsIGJhc2VDbGllbnQsIHVwbG9hZHNDbGllbnQsIEFXUywgZ2V0Q3JlZGVudGlhbHMsIHB1dEZpbGVPblMzLCBjcmVkZW50aWFsczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5zaGFwZWZpbGUpOwogICAgICAgICAgICAgICAgX3RoaXMuc3VibWl0dGluZyA9IHRydWU7CgogICAgICAgICAgICAgICAgX3RoaXMuY2xlYXJTdGF0dXMoKTsKCiAgICAgICAgICAgICAgICBNWV9BQ0NFU1NfVE9LRU4gPSAnc2suZXlKMUlqb2llV2x4YVc1bloyZG5JaXdpWVNJNkltTnJkRzUxTVhNM09UQTJPVzR6TUhBNWREWm1kalZvWlRVaWZRLnEyZHhtd0FRams5Zmc5TEFCalU5N2cnOwogICAgICAgICAgICAgICAgbWJ4VXBsb2FkcyA9IHJlcXVpcmUoJ0BtYXBib3gvbWFwYm94LXNkay9zZXJ2aWNlcy91cGxvYWRzJyk7CiAgICAgICAgICAgICAgICBtYnhDbGllbnQgPSByZXF1aXJlKCdAbWFwYm94L21hcGJveC1zZGsnKTsKICAgICAgICAgICAgICAgIGJhc2VDbGllbnQgPSBtYnhDbGllbnQoewogICAgICAgICAgICAgICAgICBhY2Nlc3NUb2tlbjogTVlfQUNDRVNTX1RPS0VOCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHVwbG9hZHNDbGllbnQgPSBtYnhVcGxvYWRzKGJhc2VDbGllbnQpOwogICAgICAgICAgICAgICAgQVdTID0gcmVxdWlyZSgnYXdzLXNkaycpOwoKICAgICAgICAgICAgICAgIGdldENyZWRlbnRpYWxzID0gZnVuY3Rpb24gZ2V0Q3JlZGVudGlhbHMoKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB1cGxvYWRzQ2xpZW50LmNyZWF0ZVVwbG9hZENyZWRlbnRpYWxzKCkuc2VuZCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJvZHk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICBfdGhpcy5zaGFwZWZpbGUgPSB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICcnLAogICAgICAgICAgICAgICAgICBmaWxlOiAnJwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF90aGlzLmVycm9yID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpcy5zdWNjZXNzID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzLnN1Ym1pdHRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICBwdXRGaWxlT25TMyA9IGZ1bmN0aW9uIHB1dEZpbGVPblMzKGNyZWRlbnRpYWxzKSB7CiAgICAgICAgICAgICAgICAgIHZhciBzMyA9IG5ldyBBV1MuUzMoewogICAgICAgICAgICAgICAgICAgIGFjY2Vzc0tleUlkOiBjcmVkZW50aWFscy5hY2Nlc3NLZXlJZCwKICAgICAgICAgICAgICAgICAgICBzZWNyZXRBY2Nlc3NLZXk6IGNyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleSwKICAgICAgICAgICAgICAgICAgICBzZXNzaW9uVG9rZW46IGNyZWRlbnRpYWxzLnNlc3Npb25Ub2tlbiwKICAgICAgICAgICAgICAgICAgICByZWdpb246ICd1cy1lYXN0LTEnCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICByZXR1cm4gczMucHV0T2JqZWN0KHsKICAgICAgICAgICAgICAgICAgICBCdWNrZXQ6IGNyZWRlbnRpYWxzLmJ1Y2tldCwKICAgICAgICAgICAgICAgICAgICBLZXk6IGNyZWRlbnRpYWxzLmtleSwKICAgICAgICAgICAgICAgICAgICBCb2R5OiBfdGhpcy5zaGFwZWZpbGUuZmlsZQogICAgICAgICAgICAgICAgICB9KS5wcm9taXNlKCk7CiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRDcmVkZW50aWFscygpOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgICAgY3JlZGVudGlhbHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcHV0RmlsZU9uUzMoY3JlZGVudGlhbHMpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coY3JlZGVudGlhbHMpOyAvLyBjb25zdCBteVVzZXJuYW1lID0gJ3lpcWluZ2dnZyc7CiAgICAgICAgICAgICAgICAvLyBjb25zdCBteVRpbGVzZXQgPSAnbXlUaWxlc2V0JzsKCiAgICAgICAgICAgICAgICB1cGxvYWRzQ2xpZW50LmNyZWF0ZVVwbG9hZCh7CiAgICAgICAgICAgICAgICAgIHRpbGVzZXQ6ICJ5aXFpbmdnZ2cubXlUaWxlc2V0IiwKICAgICAgICAgICAgICAgICAgdXJsOiBjcmVkZW50aWFscy51cmwsCiAgICAgICAgICAgICAgICAgIG5hbWU6ICJ0ZXN0IgogICAgICAgICAgICAgICAgfSkuc2VuZCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHZhciB1cGxvYWQgPSByZXNwb25zZS5ib2R5OwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1cGxvYWQpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZG9uZScpOwoKICAgICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNsZWFyU3RhdHVzOiBmdW5jdGlvbiBjbGVhclN0YXR1cygpIHsKICAgICAgdGhpcy5zdWNjZXNzID0gZmFsc2U7CiAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["EmployeeForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"employee-form\">\n    <form @submit.prevent=\"createFileUpload\">\n      <label>Shapefile name</label>\n      <input v-model=\"shapefile.name\" type=\"text\" />\n      <label>Upload Shapefile</label>\n      <input\n        type=\"file\"\n        @change=\"uploadFileSave\"\n        name=\"uploadFile\"\n        required\n      />\n      <p v-if=\"error && submitting\" class=\"error-message\">\n        ❗Please fill out all required fields\n      </p>\n      <p v-if=\"success\" class=\"success-message\">\n        ✅ File successfully added\n      </p>\n      <button>Add File</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'employee-form',\n  data() {\n    return {\n      submitting: false,\n      error: false,\n      success: false,\n      shapefile: {\n        name: '',\n        file: '',\n      },\n    };\n  },\n  computed: {\n    invalidName() {\n      console.log(this.shapefile.name);\n      return this.shapefile.name === '';\n    },\n  },\n  methods: {\n    uploadFileSave(event){\n      console.log(event.target.files[0])\n      this.shapefile.file = event.target.files[0]\n    },\n    async createFileUpload() {\n      console.log(this.shapefile)\n      this.submitting = true;\n      this.clearStatus();\n        const MY_ACCESS_TOKEN = 'sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdG51MXM3OTA2OW4zMHA5dDZmdjVoZTUifQ.q2dxmwAQjk9fg9LABjU97g';\n        const mbxUploads = require('@mapbox/mapbox-sdk/services/uploads');\n        const mbxClient = require('@mapbox/mapbox-sdk');\n        const baseClient = mbxClient({ accessToken: MY_ACCESS_TOKEN });\n        const uploadsClient = mbxUploads(baseClient);\n\n        const AWS = require('aws-sdk');\n        const getCredentials = () => {\n            return uploadsClient\n              .createUploadCredentials()\n              .send()\n              .then(response => response.body);\n        }\n      this.shapefile = {\n        name: '',\n        file: '',\n      };\n      this.error = false;\n      this.success = true;\n      this.submitting = false;\n        const putFileOnS3 = (credentials) => {\n        const s3 = new AWS.S3({\n        accessKeyId: credentials.accessKeyId,\n        secretAccessKey: credentials.secretAccessKey,\n        sessionToken: credentials.sessionToken,\n        region: 'us-east-1'\n      });\n      return s3.putObject({\n        Bucket: credentials.bucket,\n        Key: credentials.key,\n        Body: this.shapefile.file,\n      }).promise();\n    };\n      const credentials = await getCredentials();\n      putFileOnS3(credentials);\n      console.log(credentials)\n    // const myUsername = 'yiqingggg';\n    // const myTileset = 'myTileset';\n\n      uploadsClient.createUpload({\n        tileset: `yiqingggg.myTileset`,\n        url: credentials.url,\n        name: `test`,\n      })\n        .send()\n        .then(response => {\n          const upload = response.body;\n          console.log(upload);\n        });\n      console.log('done')\n    },\n\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\nform {\n  margin-bottom: 2rem;\n}\n\n[class*='-message'] {\n  font-weight: 500;\n}\n\n.error-message {\n  color: #d33c40;\n}\n\n.success-message {\n  color: #32a95d;\n}\n</style>\n"],"sourceRoot":"src/components"}]}