{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/ShapefileForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/ShapefileForm.vue","mtime":1632783140681},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js","mtime":1632429635042},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy95aXFpbmcvRG93bmxvYWRzL3Z1ZS10ZXN0L3JlZG8tbWFwYm94LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gbGV0IHRpbGVzZXRpZDsKLy8gY29uc3QgTVlfQUNDRVNTX1RPS0VOID0KLy8gICAnc2suZXlKMUlqb2llV2x4YVc1bloyZG5JaXdpWVNJNkltTnJkSGhtYTNaaVl6QnJNWFF5Ym5Sb2VtRmtPVGxoTVc0aWZRLkZlMFhodllLc2M1QTlNbUU4eEQ3T1EnOwovLyBjb25zdCBtYnhVcGxvYWRzID0gcmVxdWlyZSgnQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3VwbG9hZHMnKTsKLy8gY29uc3QgbWJ4Q2xpZW50ID0gcmVxdWlyZSgnQG1hcGJveC9tYXBib3gtc2RrJyk7Ci8vIGNvbnN0IGJhc2VDbGllbnQgPSBtYnhDbGllbnQoeyBhY2Nlc3NUb2tlbjogTVlfQUNDRVNTX1RPS0VOIH0pOwovLyBjb25zdCB1cGxvYWRzQ2xpZW50ID0gbWJ4VXBsb2FkcyhiYXNlQ2xpZW50KTsKLy8gLy8gbGV0IHVwbG9hZElkOwovLyBpbXBvcnQgbWFwYm94Z2wgZnJvbSAnbWFwYm94LWdsJzsKLy8gY29uc3QgQVdTID0gcmVxdWlyZSgnYXdzLXNkaycpOwovLyBtYXBib3hnbC5hY2Nlc3NUb2tlbiA9Ci8vICAgJ3BrLmV5SjFJam9pZVdseGFXNW5aMmRuSWl3aVlTSTZJbU5yZEhrd00ydzFjVEo1ZFdneWRuQnRkV3g0TVhGbE4zRWlmUS5Xb1N6MlpuLWg3U2tkRG1vdXhDMFhRJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdzaGFwZWZpbGUtZm9ybScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN1Ym1pdGluZzogZmFsc2UsCiAgICAgIGVycm9yOiBmYWxzZSwKICAgICAgc3VjY2VzczogZmFsc2UsCiAgICAgIHNoYXBlZmlsZXM6IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBpZDogJycKICAgICAgfSwKICAgICAgc2VsZWN0ZWRGaWxlOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8gYXN5bmMgb25QaWNrRmlsZSgpIHsKICAgIC8vICAgdGhpcy4kcmVmcy5maWxlSW5wdXQuY2xpY2soKTsKICAgIC8vIH0sCiAgICBoYW5kbGVGaWxlU3VibWl0OiBmdW5jdGlvbiBoYW5kbGVGaWxlU3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpcy5zdWJtaXR0aW5nID0gdHJ1ZTsKCiAgICAgICAgICAgICAgICBfdGhpcy5jbGVhclN0YXR1cygpOwoKICAgICAgICAgICAgICAgIF90aGlzLiRlbWl0KCdhZGQ6c2hhcGVmaWxlJywgX3RoaXMuc2hhcGVmaWxlcyk7CgogICAgICAgICAgICAgICAgX3RoaXMuc2hhcGVmaWxlcyA9IHsKICAgICAgICAgICAgICAgICAgbmFtZTogJycsCiAgICAgICAgICAgICAgICAgIGlkOiAnJwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF90aGlzLmVycm9yID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpcy5zdWNjZXNzID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzLnN1Ym1pdHRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHByZXZpZXdGaWxlczogZnVuY3Rpb24gcHJldmlld0ZpbGVzKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi5zZWxlY3RlZEZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24gaGFuZGxlU3VibWl0KCkgewogICAgICBjb25zb2xlLmxvZygndGVzdGluZyBoYW5kbGVTdWJtaXQnKTsKICAgICAgdGhpcy5zdWJtaXR0aW5nID0gdHJ1ZTsKICAgICAgdGhpcy5jbGVhclN0YXR1cygpOwoKICAgICAgaWYgKHRoaXMuaW52YWxpZE5hbWUgfHwgdGhpcy5pbnZhbGlkRW1haWwpIHsKICAgICAgICB0aGlzLmVycm9yID0gdHJ1ZTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ2FkZDplbXBsb3llZScsIHRoaXMuZW1wbG95ZWUpOwogICAgICB0aGlzLiRyZWZzLmZpcnN0LmZvY3VzKCk7CiAgICAgIHRoaXMuZW1wbG95ZWUgPSB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgZW1haWw6ICcnCiAgICAgIH07CiAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTsKICAgICAgdGhpcy5zdWNjZXNzID0gdHJ1ZTsKICAgICAgdGhpcy5zdWJtaXR0aW5nID0gZmFsc2U7CiAgICB9LAogICAgY2xlYXJTdGF0dXM6IGZ1bmN0aW9uIGNsZWFyU3RhdHVzKCkgewogICAgICB0aGlzLnN1Y2Nlc3MgPSBmYWxzZTsKICAgICAgdGhpcy5lcnJvciA9IGZhbHNlOwogICAgfQogIH0KfTsgLy8gICBleHBvcnQgZGVmYXVsdCB7Ci8vICAgICBuYW1lOiAnZW1wbG95ZWUtZm9ybScsCi8vICAgICBkYXRhKCkgewovLyAgICAgICByZXR1cm4gewovLyAgICAgICAgIGVtcGxveWVlOiB7Ci8vICAgICAgICAgICBuYW1lOiAnJywKLy8gICAgICAgICAgIGVtYWlsOiAnJywKLy8gICAgICAgICB9LAovLyAgICAgICB9Ci8vICAgICB9LAovLyAgICAgbWV0aG9kczogewovLyAgICAgICAgIGhhbmRsZVN1Ym1pdCgpIHsKLy8gICAgICAgICAgICAgY29uc29sZS5sb2coJ3Rlc3RpbmcgaGFuZGxlU3VibWl0JykKLy8gICAgICAgICB9LAovLyAgICAgfSwKLy8gICB9"},{"version":3,"sources":["ShapefileForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAIA,MAAA,UAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,EAAA,EAAA;AAFA,OAJA;AAQA,MAAA,YAAA,EAAA;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,IAAA,gBAJA,8BAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,IAAA;;AACA,gBAAA,KAAA,CAAA,WAAA;;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,eAAA,EAAA,KAAA,CAAA,UAAA;;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA;AACA,kBAAA,IAAA,EAAA,EADA;AAEA,kBAAA,EAAA,EAAA;AAFA,iBAAA;AAIA,gBAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,UAAA,GAAA,KAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAfA;AAgBA,IAAA,YAhBA,wBAgBA,KAhBA,EAgBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KAlBA;AAmBA,IAAA,YAnBA,0BAmBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,sBAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,WAAA;;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,YAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA;AACA;AACA;;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA,QAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA,WAAA,QAAA,GAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAIA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,KApCA;AAqCA,IAAA,WArCA,yBAqCA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA;AAxCA;AAdA,CAAA,C,CAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["<template>\n  <div id=\"shapefile-form\">\n    <label>Shapefile upload</label>\n    <form\n      class=\"upload\"\n      @submit.prevent=\"handleFileSubmit\"\n      @change=\"previewFiles\"\n    >\n      <label>File Name</label>\n      <input v-model=\"shapefiles.name\" type=\"text\" />\n      <input type=\"file\" name=\"uploadFile\" accept=\".zip\" required />\n      <br /><br />\n      <input type=\"submit\" />\n    </form>\n    <div id=\"map-component\" />\n  </div>\n</template>\n\n<script>\n// let tilesetid;\n// const MY_ACCESS_TOKEN =\n//   'sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHhma3ZiYzBrMXQybnRoemFkOTlhMW4ifQ.Fe0XhvYKsc5A9MmE8xD7OQ';\n// const mbxUploads = require('@mapbox/mapbox-sdk/services/uploads');\n// const mbxClient = require('@mapbox/mapbox-sdk');\n// const baseClient = mbxClient({ accessToken: MY_ACCESS_TOKEN });\n// const uploadsClient = mbxUploads(baseClient);\n// // let uploadId;\n// import mapboxgl from 'mapbox-gl';\n// const AWS = require('aws-sdk');\n// mapboxgl.accessToken =\n//   'pk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHkwM2w1cTJ5dWgydnBtdWx4MXFlN3EifQ.WoSz2Zn-h7SkdDmouxC0XQ';\nexport default {\n  name: 'shapefile-form',\n  data() {\n    return {\n      submiting: false,\n      error: false,\n      success: false,\n      shapefiles: {\n        name: '',\n        id: '',\n      },\n      selectedFile: null,\n    };\n  },\n  methods: {\n    // async onPickFile() {\n    //   this.$refs.fileInput.click();\n    // },\n    async handleFileSubmit() {\n      this.submitting = true;\n      this.clearStatus();\n      this.$emit('add:shapefile', this.shapefiles);\n      this.shapefiles = {\n        name: '',\n        id: '',\n      };\n      this.error = false;\n      this.success = true;\n      this.submitting = false;\n    },\n    async previewFiles(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    handleSubmit() {\n      console.log('testing handleSubmit');\n      this.submitting = true;\n      this.clearStatus();\n      if (this.invalidName || this.invalidEmail) {\n        this.error = true;\n        return;\n      }\n      this.$emit('add:employee', this.employee);\n      this.$refs.first.focus();\n      this.employee = {\n        name: '',\n        email: '',\n      };\n      this.error = false;\n      this.success = true;\n      this.submitting = false;\n    },\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n  },\n};\n//   export default {\n//     name: 'employee-form',\n//     data() {\n//       return {\n//         employee: {\n//           name: '',\n//           email: '',\n//         },\n//       }\n//     },\n//     methods: {\n//         handleSubmit() {\n//             console.log('testing handleSubmit')\n//         },\n//     },\n//   }\n</script>\n\n<style scoped>\nform {\n  margin-bottom: 2rem;\n}\n[class*='-message'] {\n  font-weight: 500;\n}\n.error-message {\n  color: #d33c40;\n}\n.success-message {\n  color: #32a95d;\n}\n</style>\n"],"sourceRoot":"src/components"}]}