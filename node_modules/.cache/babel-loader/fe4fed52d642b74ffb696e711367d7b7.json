{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/EmployeeForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/EmployeeForm.vue","mtime":1632777350946},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js","mtime":1632429635042},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy95aXFpbmcvRG93bmxvYWRzL3Z1ZS10ZXN0L3JlZG8tbWFwYm94LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIHRpbGVzZXRpZDsKdmFyIE1ZX0FDQ0VTU19UT0tFTiA9ICdzay5leUoxSWpvaWVXbHhhVzVuWjJkbklpd2lZU0k2SW1OcmRIaG1hM1ppWXpCck1YUXliblJvZW1Ga09UbGhNVzRpZlEuRmUwWGh2WUtzYzVBOU1tRTh4RDdPUSc7Cgp2YXIgbWJ4VXBsb2FkcyA9IHJlcXVpcmUoJ0BtYXBib3gvbWFwYm94LXNkay9zZXJ2aWNlcy91cGxvYWRzJyk7Cgp2YXIgbWJ4Q2xpZW50ID0gcmVxdWlyZSgnQG1hcGJveC9tYXBib3gtc2RrJyk7Cgp2YXIgYmFzZUNsaWVudCA9IG1ieENsaWVudCh7CiAgYWNjZXNzVG9rZW46IE1ZX0FDQ0VTU19UT0tFTgp9KTsKdmFyIHVwbG9hZHNDbGllbnQgPSBtYnhVcGxvYWRzKGJhc2VDbGllbnQpOyAvLyBsZXQgdXBsb2FkSWQ7CgppbXBvcnQgbWFwYm94Z2wgZnJvbSAnbWFwYm94LWdsJzsKCnZhciBBV1MgPSByZXF1aXJlKCdhd3Mtc2RrJyk7CgptYXBib3hnbC5hY2Nlc3NUb2tlbiA9ICdway5leUoxSWpvaWVXbHhhVzVuWjJkbklpd2lZU0k2SW1OcmRIa3dNMncxY1RKNWRXZ3lkbkJ0ZFd4NE1YRmxOM0VpZlEuV29TejJabi1oN1NrZERtb3V4QzBYUSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZW1wbG95ZWUtZm9ybScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN1Ym1pdGluZzogZmFsc2UsCiAgICAgIGVycm9yOiBmYWxzZSwKICAgICAgc3VjY2VzczogZmFsc2UsCiAgICAgIHNoYXBlZmlsZXM6IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBpZDogJycKICAgICAgfSwKICAgICAgc2VsZWN0ZWRGaWxlOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgb25QaWNrRmlsZTogZnVuY3Rpb24gb25QaWNrRmlsZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMuJHJlZnMuZmlsZUlucHV0LmNsaWNrKCk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyBhc3luYyBjaGVja1VwbG9hZFN0YXR1cygpIHsKICAgIC8vICAgYXdhaXQgdXBsb2Fkc0NsaWVudAogICAgLy8gICAgIC5nZXRVcGxvYWQoewogICAgLy8gICAgICAgdXBsb2FkSWQ6IHVwbG9hZElkLAogICAgLy8gICAgIH0pCiAgICAvLyAgICAgLnNlbmQoKQogICAgLy8gICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgLy8gICAgICAgY29uc3Qgc3RhdHVzID0gcmVzcG9uc2UuYm9keTsKICAgIC8vICAgICAgIGNvbnNvbGUubG9nKHN0YXR1cyk7CiAgICAvLyAgICAgfSk7CiAgICAvLyB9LAogICAgaGFuZGxlRmlsZVN1Ym1pdDogZnVuY3Rpb24gaGFuZGxlRmlsZVN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZ2V0Q3JlZGVudGlhbHMsIHB1dEZpbGVPblMzLCBjcmVkZW50aWFscywgbXlVc2VybmFtZSwgbXlUaWxlc2V0LCBtYXA7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdGFydGluZyB1cGxvYWQuLi4nKTsgLy8gY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LmZpbGVzKTsKICAgICAgICAgICAgICAgIC8vIGltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJzsKCiAgICAgICAgICAgICAgICBnZXRDcmVkZW50aWFscyA9IGZ1bmN0aW9uIGdldENyZWRlbnRpYWxzKCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gdXBsb2Fkc0NsaWVudC5jcmVhdGVVcGxvYWRDcmVkZW50aWFscygpLnNlbmQoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5OwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgcHV0RmlsZU9uUzMgPSBmdW5jdGlvbiBwdXRGaWxlT25TMyhjcmVkZW50aWFscykgewogICAgICAgICAgICAgICAgICB2YXIgczMgPSBuZXcgQVdTLlMzKHsKICAgICAgICAgICAgICAgICAgICBhY2Nlc3NLZXlJZDogY3JlZGVudGlhbHMuYWNjZXNzS2V5SWQsCiAgICAgICAgICAgICAgICAgICAgc2VjcmV0QWNjZXNzS2V5OiBjcmVkZW50aWFscy5zZWNyZXRBY2Nlc3NLZXksCiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblRva2VuOiBjcmVkZW50aWFscy5zZXNzaW9uVG9rZW4sCiAgICAgICAgICAgICAgICAgICAgcmVnaW9uOiAndXMtZWFzdC0xJwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHMzLnB1dE9iamVjdCh7CiAgICAgICAgICAgICAgICAgICAgQnVja2V0OiBjcmVkZW50aWFscy5idWNrZXQsCiAgICAgICAgICAgICAgICAgICAgS2V5OiBjcmVkZW50aWFscy5rZXksCiAgICAgICAgICAgICAgICAgICAgQm9keTogX3RoaXMyLnNlbGVjdGVkRmlsZSAvLyBCb2R5OiBmcy5jcmVhdGVSZWFkU3RyZWFtKCcvcGF0aC90by9maWxlLm1idGlsZXMnKQoKICAgICAgICAgICAgICAgICAgfSkucHJvbWlzZSgpOwogICAgICAgICAgICAgICAgfTsgLy8gY29uc29sZS5sb2coYXdhaXQgZ2V0Q3JlZGVudGlhbHMoKSk7CiAgICAgICAgICAgICAgICAvLyBsZXQgY3JlZGVudGlhbHMgPSBhd2FpdCBnZXRDcmVkZW50aWFscygpOwogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY3JlZGVudGlhbHMpOwogICAgICAgICAgICAgICAgLy8gY3JlZGVudGlhbHMgPSBwdXRGaWxlT25TMyhjcmVkZW50aWFscyk7CiAgICAgICAgICAgICAgICAvLyByZXNwb25zZS50aGVuKGNvbnNvbGUubG9nKTsKICAgICAgICAgICAgICAgIC8vIHJlc3BvbnNlLnRoZW4oKHJlcykgPT4gY29uc29sZS5sb2cocmVzKSk7CgoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBnZXRDcmVkZW50aWFscygpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBjcmVkZW50aWFscyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcHV0RmlsZU9uUzMoY3JlZGVudGlhbHMpOwogICAgICAgICAgICAgICAgbXlVc2VybmFtZSA9ICd5aXFpbmdnZ2cnOwogICAgICAgICAgICAgICAgbXlUaWxlc2V0ID0gJ215VGlsZXNldDInOyAvLyBjb25zdCBjcmVkZW50aWFscyA9IHVwbG9hZHNDbGllbnQuY3JlYXRlVXBsb2FkQ3JlZGVudGlhbHMoKTsKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjcmVkZW50aWFscyk7CiAgICAgICAgICAgICAgICB1cGxvYWRzQ2xpZW50LmNyZWF0ZVVwbG9hZCh7CiAgICAgICAgICAgICAgICAgIHRpbGVzZXQ6ICIiLmNvbmNhdChteVVzZXJuYW1lLCAiLiIpLmNvbmNhdChteVRpbGVzZXQpLAogICAgICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3RpbGVzdHJlYW0tdGlsZXNldHMtcHJvZHVjdGlvbi5zMy5hbWF6b25hd3MuY29tL2Y5L19wZW5kaW5nL29qZHhiN3R5a3A4MngxczNuY2VxeXh0a2MveWlxaW5nZ2dnJywKICAgICAgICAgICAgICAgICAgbmFtZTogJ0pNTFEgVVBMT0FEMScKICAgICAgICAgICAgICAgIH0pLnNlbmQoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICB2YXIgdXBsb2FkID0gcmVzcG9uc2UuYm9keTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codXBsb2FkLCB1cGxvYWQudGlsZXNldCk7CiAgICAgICAgICAgICAgICAgIHRpbGVzZXRpZCA9IHVwbG9hZC50aWxlc2V0OyAvLyB1cGxvYWRJZCA9IHJlc3BvbnNlLmJvZHkuaWQ7CiAgICAgICAgICAgICAgICB9KTsgLy8gYXdhaXQgdXBsb2Fkc0NsaWVudAogICAgICAgICAgICAgICAgLy8gICAuZ2V0VXBsb2FkKHsKICAgICAgICAgICAgICAgIC8vICAgICB1cGxvYWRJZDogdXBsb2FkSWQsCiAgICAgICAgICAgICAgICAvLyAgIH0pCiAgICAgICAgICAgICAgICAvLyAgIC5zZW5kKCkKICAgICAgICAgICAgICAgIC8vICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICAvLyAgICAgY29uc3Qgc3RhdHVzID0gcmVzcG9uc2UuYm9keTsKICAgICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhzdGF0dXMpOwogICAgICAgICAgICAgICAgLy8gICB9KTsKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZG9uZScpOwogICAgICAgICAgICAgICAgbWFwID0gbmV3IG1hcGJveGdsLk1hcCh7CiAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogJ21hcC1jb21wb25lbnQnLAogICAgICAgICAgICAgICAgICAvLyBjb250YWluZXIgSUQKICAgICAgICAgICAgICAgICAgc3R5bGU6ICdtYXBib3g6Ly9zdHlsZXMvbWFwYm94L3N0cmVldHMtdjExJywKICAgICAgICAgICAgICAgICAgLy8gc3R5bGUgVVJMCiAgICAgICAgICAgICAgICAgIGNlbnRlcjogWy0xMjIuMjcyNzgxLCAzNy44NzE2NjZdLAogICAgICAgICAgICAgICAgICAvLyBzdGFydGluZyBwb3NpdGlvbiBbbG5nLCBsYXRdCiAgICAgICAgICAgICAgICAgIHpvb206IDE1IC8vIHN0YXJ0aW5nIHpvb20KCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRpbGVzZXRpZCk7CiAgICAgICAgICAgICAgICBtYXAub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIG1hcC5hZGRTb3VyY2UoJ3BhcmtzJywgewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICd2ZWN0b3InLAogICAgICAgICAgICAgICAgICAgIHVybDogIm1hcGJveDovL3lpcWluZ2dnZy5teVRpbGVzZXQyIgogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgbWFwLmFkZExheWVyKHsKICAgICAgICAgICAgICAgICAgICBpZDogJ3BhcmtzJywKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICAgICAgICAgICAgc291cmNlOiAncGFya3MnLAogICAgICAgICAgICAgICAgICAgICdzb3VyY2UtbGF5ZXInOiAnSk1MUSBVUExPQUQxJywKICAgICAgICAgICAgICAgICAgICBsYXlvdXQ6IHsKICAgICAgICAgICAgICAgICAgICAgIC8vIE1ha2UgdGhlIGxheWVyIHZpc2libGUgYnkgZGVmYXVsdC4KICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6ICd2aXNpYmxlJywKICAgICAgICAgICAgICAgICAgICAgICdsaW5lLWpvaW4nOiAncm91bmQnLAogICAgICAgICAgICAgICAgICAgICAgJ2xpbmUtY2FwJzogJ3JvdW5kJwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgcGFpbnQ6IHsKICAgICAgICAgICAgICAgICAgICAgICdsaW5lLWNvbG9yJzogJyM4NzdiNTknLAogICAgICAgICAgICAgICAgICAgICAgJ2xpbmUtd2lkdGgnOiAyMAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIGFzeW5jIG9uRmlsZVBpY2tlZCAoZXZlbnQpIHsKICAgIC8vICAgY29uc3QgZmlsZXMgPSBldmVudC50YXJnZXQuZmlsZXMKICAgIC8vICAgbGV0IGZpbGVuYW1lID0gZmlsZXNbMF0ubmFtZQogICAgLy8gICBjb25zdCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKQogICAgLy8gICBmaWxlUmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7CiAgICAvLyAgICAgdGhpcy5pbWFnZVVybCA9IGZpbGVSZWFkZXIucmVzdWx0CiAgICAvLyAgIH0pCiAgICAvLyAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlc1swXSkKICAgIC8vICAgdGhpcy5pbWFnZSA9IGZpbGVzWzBdCiAgICAvLyAgIGNvbnNvbGUubG9nKGZpbGVuYW1lKTsKICAgIC8vICAgYXdhaXQgaGFuZGxlRmlsZVN1Ym1pdCh0aGlzLmltYWdlKTsKICAgIC8vIH0sCiAgICBwcmV2aWV3RmlsZXM6IGZ1bmN0aW9uIHByZXZpZXdGaWxlcyhldmVudCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczMuc2VsZWN0ZWRGaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBoYW5kbGVTdWJtaXQ6IGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdCgpIHsKICAgICAgY29uc29sZS5sb2coJ3Rlc3RpbmcgaGFuZGxlU3VibWl0Jyk7CiAgICAgIHRoaXMuc3VibWl0dGluZyA9IHRydWU7CiAgICAgIHRoaXMuY2xlYXJTdGF0dXMoKTsKCiAgICAgIGlmICh0aGlzLmludmFsaWROYW1lIHx8IHRoaXMuaW52YWxpZEVtYWlsKSB7CiAgICAgICAgdGhpcy5lcnJvciA9IHRydWU7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCdhZGQ6ZW1wbG95ZWUnLCB0aGlzLmVtcGxveWVlKTsKICAgICAgdGhpcy4kcmVmcy5maXJzdC5mb2N1cygpOwogICAgICB0aGlzLmVtcGxveWVlID0gewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIGVtYWlsOiAnJwogICAgICB9OwogICAgICB0aGlzLmVycm9yID0gZmFsc2U7CiAgICAgIHRoaXMuc3VjY2VzcyA9IHRydWU7CiAgICAgIHRoaXMuc3VibWl0dGluZyA9IGZhbHNlOwogICAgfSwKICAgIGNsZWFyU3RhdHVzOiBmdW5jdGlvbiBjbGVhclN0YXR1cygpIHsKICAgICAgdGhpcy5zdWNjZXNzID0gZmFsc2U7CiAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTsKICAgIH0KICB9Cn07IC8vICAgZXhwb3J0IGRlZmF1bHQgewovLyAgICAgbmFtZTogJ2VtcGxveWVlLWZvcm0nLAovLyAgICAgZGF0YSgpIHsKLy8gICAgICAgcmV0dXJuIHsKLy8gICAgICAgICBlbXBsb3llZTogewovLyAgICAgICAgICAgbmFtZTogJycsCi8vICAgICAgICAgICBlbWFpbDogJycsCi8vICAgICAgICAgfSwKLy8gICAgICAgfQovLyAgICAgfSwKLy8gICAgIG1ldGhvZHM6IHsKLy8gICAgICAgICBoYW5kbGVTdWJtaXQoKSB7Ci8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0ZXN0aW5nIGhhbmRsZVN1Ym1pdCcpCi8vICAgICAgICAgfSwKLy8gICAgIH0sCi8vICAgfQ=="},{"version":3,"sources":["EmployeeForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"employee-form\">\n    <label>Shapefile upload</label>\n    <!-- <form @submit.prevent=\"checkUploadStatus\">\n      <button>Check</button>\n    </form> -->\n    <form\n      class=\"upload\"\n      @submit.prevent=\"handleFileSubmit\"\n      @change=\"previewFiles\"\n    >\n      <label>File Name</label>\n      <!-- <input type=\"text\" /> -->\n      <input v-model=\"shapefiles.name\" type=\"text\" />\n      <input type=\"file\" name=\"uploadFile\" accept=\".zip\" required />\n      <br /><br />\n      <input type=\"submit\" />\n    </form>\n    <div id=\"map-component\" />\n  </div>\n</template>\n\n<script>\nlet tilesetid;\nconst MY_ACCESS_TOKEN =\n  'sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHhma3ZiYzBrMXQybnRoemFkOTlhMW4ifQ.Fe0XhvYKsc5A9MmE8xD7OQ';\nconst mbxUploads = require('@mapbox/mapbox-sdk/services/uploads');\nconst mbxClient = require('@mapbox/mapbox-sdk');\nconst baseClient = mbxClient({ accessToken: MY_ACCESS_TOKEN });\nconst uploadsClient = mbxUploads(baseClient);\n// let uploadId;\nimport mapboxgl from 'mapbox-gl';\nconst AWS = require('aws-sdk');\nmapboxgl.accessToken =\n  'pk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHkwM2w1cTJ5dWgydnBtdWx4MXFlN3EifQ.WoSz2Zn-h7SkdDmouxC0XQ';\nexport default {\n  name: 'employee-form',\n  data() {\n    return {\n      submiting: false,\n      error: false,\n      success: false,\n      shapefiles: {\n        name: '',\n        id: '',\n      },\n      selectedFile: null,\n    };\n  },\n  methods: {\n    async onPickFile() {\n      this.$refs.fileInput.click();\n    },\n    // async checkUploadStatus() {\n    //   await uploadsClient\n    //     .getUpload({\n    //       uploadId: uploadId,\n    //     })\n    //     .send()\n    //     .then((response) => {\n    //       const status = response.body;\n    //       console.log(status);\n    //     });\n    // },\n    async handleFileSubmit() {\n      console.log('starting upload...');\n      // console.log(event.target.files);\n      // import * as fs from 'fs';\n      const getCredentials = () => {\n        return uploadsClient\n          .createUploadCredentials()\n          .send()\n          .then((response) => response.body);\n      };\n      const putFileOnS3 = (credentials) => {\n        const s3 = new AWS.S3({\n          accessKeyId: credentials.accessKeyId,\n          secretAccessKey: credentials.secretAccessKey,\n          sessionToken: credentials.sessionToken,\n          region: 'us-east-1',\n        });\n        return s3\n          .putObject({\n            Bucket: credentials.bucket,\n            Key: credentials.key,\n            Body: this.selectedFile,\n            // Body: fs.createReadStream('/path/to/file.mbtiles')\n          })\n          .promise();\n      };\n      // console.log(await getCredentials());\n      // let credentials = await getCredentials();\n      // console.log(credentials);\n      // credentials = putFileOnS3(credentials);\n      // response.then(console.log);\n      // response.then((res) => console.log(res));\n      const credentials = await getCredentials();\n      putFileOnS3(credentials);\n      const myUsername = 'yiqingggg';\n      const myTileset = 'myTileset2';\n      // const credentials = uploadsClient.createUploadCredentials();\n      console.log(credentials);\n      uploadsClient\n        .createUpload({\n          tileset: `${myUsername}.${myTileset}`,\n          url:\n            'https://tilestream-tilesets-production.s3.amazonaws.com/f9/_pending/ojdxb7tykp82x1s3nceqyxtkc/yiqingggg',\n          name: 'JMLQ UPLOAD1',\n        })\n        .send()\n        .then((response) => {\n          const upload = response.body;\n          console.log(upload, upload.tileset);\n          tilesetid = upload.tileset;\n          // uploadId = response.body.id;\n        });\n      // await uploadsClient\n      //   .getUpload({\n      //     uploadId: uploadId,\n      //   })\n      //   .send()\n      //   .then((response) => {\n      //     const status = response.body;\n      //     console.log(status);\n      //   });\n      console.log('done');\n      const map = new mapboxgl.Map({\n        container: 'map-component', // container ID\n        style: 'mapbox://styles/mapbox/streets-v11', // style URL\n        center: [-122.272781, 37.871666], // starting position [lng, lat]\n        zoom: 15, // starting zoom\n      });\n      console.log(tilesetid);\n      map.on('load', () => {\n        map.addSource('parks', {\n          type: 'vector',\n          url: `mapbox://yiqingggg.myTileset2`,\n        });\n        map.addLayer({\n          id: 'parks',\n          type: 'line',\n          source: 'parks',\n          'source-layer': 'JMLQ UPLOAD1',\n          layout: {\n            // Make the layer visible by default.\n            visibility: 'visible',\n            'line-join': 'round',\n            'line-cap': 'round',\n          },\n          paint: {\n            'line-color': '#877b59',\n            'line-width': 20,\n          },\n        });\n      });\n    },\n    // async onFilePicked (event) {\n    //   const files = event.target.files\n    //   let filename = files[0].name\n    //   const fileReader = new FileReader()\n    //   fileReader.addEventListener('load', () => {\n    //     this.imageUrl = fileReader.result\n    //   })\n    //   fileReader.readAsDataURL(files[0])\n    //   this.image = files[0]\n    //   console.log(filename);\n    //   await handleFileSubmit(this.image);\n    // },\n    async previewFiles(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    handleSubmit() {\n      console.log('testing handleSubmit');\n      this.submitting = true;\n      this.clearStatus();\n      if (this.invalidName || this.invalidEmail) {\n        this.error = true;\n        return;\n      }\n      this.$emit('add:employee', this.employee);\n      this.$refs.first.focus();\n      this.employee = {\n        name: '',\n        email: '',\n      };\n      this.error = false;\n      this.success = true;\n      this.submitting = false;\n    },\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n  },\n};\n//   export default {\n//     name: 'employee-form',\n//     data() {\n//       return {\n//         employee: {\n//           name: '',\n//           email: '',\n//         },\n//       }\n//     },\n//     methods: {\n//         handleSubmit() {\n//             console.log('testing handleSubmit')\n//         },\n//     },\n//   }\n</script>\n\n<style scoped>\nform {\n  margin-bottom: 2rem;\n}\n[class*='-message'] {\n  font-weight: 500;\n}\n.error-message {\n  color: #d33c40;\n}\n.success-message {\n  color: #32a95d;\n}\n</style>\n"],"sourceRoot":"src/components"}]}