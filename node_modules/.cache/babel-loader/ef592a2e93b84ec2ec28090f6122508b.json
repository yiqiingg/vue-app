{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/App.vue","mtime":1632429868297},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js","mtime":1632429635042},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Visualize a Shapefile from Berkeley</h1>\n\n    <employee-form @add:employee=\"addEmployee\" />\n    <employee-table\n      :employees=\"employees\"\n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n    />\n    <!-- <employee-table /> -->\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from '@/components/EmployeeTable.vue';\n// import EmployeeTable from './components/EmployeeTable.vue'\nimport EmployeeForm from '@/components/EmployeeForm.vue';\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      employees: [],\n    };\n  },\n  mounted() {\n    this.getEmployees();\n  },\n  methods: {\n    async addEmployee(employee) {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users',\n          {\n            method: 'POST',\n            body: JSON.stringify(employee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = [...this.employees, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getEmployees() {\n      // const lastId =\n      //   this.employees.length > 0\n      //     ? this.employees[this.employees.length - 1].id\n      //     : 0;\n      // const id = lastId + 1;\n      // const newEmployee = { ...employee, id };\n      // this.employees = [...this.employees, newEmployee];\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users'\n        );\n        const data = await response.json();\n        this.employees = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // deleteEmployee(id) {\n    //   this.employees = this.employees.filter(\n    //     employee => employee.id !== id\n    //   )\n    // },\n    async deleteEmployee(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'DELETE',\n        });\n        this.employees = this.employees.filter(\n          (employee) => employee.id !== id\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async editEmployee(id, updatedEmployee) {\n      // this.employees = this.employees.map(employee =>\n      //   employee.id === id? updatedEmployee : employee\n      // )\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`,\n          {\n            method: 'PUT',\n            body: JSON.stringify(updatedEmployee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = this.employees.map((employee) =>\n          employee.id === id ? data : employee\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\n.small-container {\n  max-width: 680px;\n}\n</style>\n"],"sourceRoot":"src"}]}