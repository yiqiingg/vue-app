{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/ShapefileTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/ShapefileTable.vue","mtime":1632782937891},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js","mtime":1632429635042},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IE1ZX0FDQ0VTU19UT0tFTiA9CiAgJ3NrLmV5SjFJam9pZVdseGFXNW5aMmRuSWl3aVlTSTZJbU5yZEhobWEzWmlZekJyTVhReWJuUm9lbUZrT1RsaE1XNGlmUS5GZTBYaHZZS3NjNUE5TW1FOHhEN09RJzsKY29uc3QgbWJ4VXBsb2FkcyA9IHJlcXVpcmUoJ0BtYXBib3gvbWFwYm94LXNkay9zZXJ2aWNlcy91cGxvYWRzJyk7CmNvbnN0IG1ieENsaWVudCA9IHJlcXVpcmUoJ0BtYXBib3gvbWFwYm94LXNkaycpOwpjb25zdCBiYXNlQ2xpZW50ID0gbWJ4Q2xpZW50KHsgYWNjZXNzVG9rZW46IE1ZX0FDQ0VTU19UT0tFTiB9KTsKY29uc3QgdXBsb2Fkc0NsaWVudCA9IG1ieFVwbG9hZHMoYmFzZUNsaWVudCk7Ci8vIGxldCB1cGxvYWRJZDsKaW1wb3J0IG1hcGJveGdsIGZyb20gJ21hcGJveC1nbCc7Cm1hcGJveGdsLmFjY2Vzc1Rva2VuID0KICAncGsuZXlKMUlqb2llV2x4YVc1bloyZG5JaXdpWVNJNkltTnJkVE00YzI5d2FERnNjRFF5Y0c5M05EZHVOWFZsT0hNaWZRLlQyTWhQeEpIMU1IbWdPLVFjNnVualEnOwovLyAgIGV4cG9ydCBkZWZhdWx0IHsKLy8gICAgIG5hbWU6ICdlbXBsb3llZS10YWJsZScsCi8vICAgfQpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3NoYXBlZmlsZS10YWJsZScsCiAgcHJvcHM6IHsKICAgIHNoYXBlZmlsZTogQXJyYXksCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdGluZzogbnVsbCwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBlZGl0TW9kZShlbXBsb3llZSkgewogICAgLy8gICAvLyB0aGlzLmVkaXRpbmcgPSBpZAogICAgLy8gICB0aGlzLmNhY2hlZEVtcGxveWVlID0gT2JqZWN0LmFzc2lnbih7fSwgZW1wbG95ZWUpOwogICAgLy8gICB0aGlzLmVkaXRpbmcgPSBlbXBsb3llZS5pZDsKICAgIC8vIH0sCiAgICBjaGVja1N0YXR1cyh1cGxvYWRJZCkgewogICAgICB1cGxvYWRzQ2xpZW50CiAgICAgICAgLmdldFVwbG9hZCh7CiAgICAgICAgICB1cGxvYWRJZDogYCR7dXBsb2FkSWR9YCwKICAgICAgICB9KQogICAgICAgIC5zZW5kKCkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IHJlc3BvbnNlLmJvZHk7CiAgICAgICAgICBjb25zb2xlLmxvZyhzdGF0dXMpOwogICAgICAgIH0pOwogICAgfSwKICAgIGFzeW5jIGNyZWF0ZU1hcHMoaWQpIHsKICAgICAgY29uc3QgbWFwID0gbmV3IG1hcGJveGdsLk1hcCh7CiAgICAgICAgY29udGFpbmVyOiBgbWFwJHtpZH1gLCAvLyBjb250YWluZXIgSUQKICAgICAgICBzdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvc3RyZWV0cy12MTEnLCAvLyBzdHlsZSBVUkwKICAgICAgICBjZW50ZXI6IFstMTIyLjI3Mjc4MSwgMzcuODcxNjY2XSwgLy8gc3RhcnRpbmcgcG9zaXRpb24gW2xuZywgbGF0XQogICAgICAgIHpvb206IDE1LCAvLyBzdGFydGluZyB6b29tCiAgICAgIH0pOwogICAgICBtYXAub24oJ2xvYWQnLCAoKSA9PiB7CiAgICAgICAgbWFwLmFkZFNvdXJjZSgncGFya3MnLCB7CiAgICAgICAgICB0eXBlOiAndmVjdG9yJywKICAgICAgICAgIHVybDogYG1hcGJveDovL3lpcWluZ2dnZy5teVRpbGVzZXQke2lkfWAsCiAgICAgICAgfSk7CiAgICAgICAgbWFwLmFkZExheWVyKHsKICAgICAgICAgIGlkOiAncGFya3MnLAogICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgc291cmNlOiAncGFya3MnLAogICAgICAgICAgJ3NvdXJjZS1sYXllcic6IGBVUExPQUQke2lkfWAsCiAgICAgICAgICBsYXlvdXQ6IHsKICAgICAgICAgICAgLy8gTWFrZSB0aGUgbGF5ZXIgdmlzaWJsZSBieSBkZWZhdWx0LgogICAgICAgICAgICB2aXNpYmlsaXR5OiAndmlzaWJsZScsCiAgICAgICAgICAgICdsaW5lLWpvaW4nOiAncm91bmQnLAogICAgICAgICAgICAnbGluZS1jYXAnOiAncm91bmQnLAogICAgICAgICAgfSwKICAgICAgICAgIHBhaW50OiB7CiAgICAgICAgICAgICdsaW5lLWNvbG9yJzogJyM4NzdiNTknLAogICAgICAgICAgICAnbGluZS13aWR0aCc6IDIwLAogICAgICAgICAgfSwKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgY2FuY2VsRWRpdChlbXBsb3llZSkgewogICAgICBPYmplY3QuYXNzaWduKGVtcGxveWVlLCB0aGlzLmNhY2hlZEVtcGxveWVlKTsKICAgICAgdGhpcy5lZGl0aW5nID0gbnVsbDsKICAgIH0sCiAgICBlZGl0RW1wbG95ZWUoZW1wbG95ZWUpIHsKICAgICAgaWYgKGVtcGxveWVlLm5hbWUgPT09ICcnIHx8IGVtcGxveWVlLmVtYWlsID09PSAnJykgcmV0dXJuOwogICAgICB0aGlzLiRlbWl0KCdlZGl0OmVtcGxveWVlJywgZW1wbG95ZWUuaWQsIGVtcGxveWVlKTsKICAgICAgdGhpcy5lZGl0aW5nID0gbnVsbDsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["ShapefileTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ShapefileTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"shapefile-table\">\n    <p v-if=\"shapefile.length < 1\" class=\"empty-table\">\n      No Files\n    </p>\n    <table v-else>\n      <thead>\n        <tr>\n          <th>Shapefile name</th>\n          <th>Map</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <!-- <tbody> -->\n      <!-- <tr> \n          <td>Richard Hendricks</td>\n          <td>richard@piedpiper.com</td>\n        </tr>\n        <tr>\n          <td>Bertram Gilfoyle</td>\n          <td>gilfoyle@piedpiper.com</td>\n        </tr>\n        <tr>\n          <td>Dinesh Chugtai</td>\n          <td>dinesh@piedpiper.com</td> -->\n      <tbody>\n        <tr v-for=\"file in shapefile\" :key=\"file.id\">\n          <td>{{ file.name }}</td>\n          <td :id=\"'map' + file.id\" />\n          <td>\n            <button @click=\"checkStatus(file.uploadId)\">Status</button>\n            <button class=\"muted-button\" @click=\"createMaps(file.id)\">\n              Map\n            </button>\n          </td>\n        </tr>\n      </tbody>\n      <!-- </tr> -->\n      <!-- </tbody> -->\n    </table>\n  </div>\n</template>\n\n<script>\nconst MY_ACCESS_TOKEN =\n  'sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHhma3ZiYzBrMXQybnRoemFkOTlhMW4ifQ.Fe0XhvYKsc5A9MmE8xD7OQ';\nconst mbxUploads = require('@mapbox/mapbox-sdk/services/uploads');\nconst mbxClient = require('@mapbox/mapbox-sdk');\nconst baseClient = mbxClient({ accessToken: MY_ACCESS_TOKEN });\nconst uploadsClient = mbxUploads(baseClient);\n// let uploadId;\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken =\n  'pk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdTM4c29waDFscDQycG93NDduNXVlOHMifQ.T2MhPxJH1MHmgO-Qc6unjQ';\n//   export default {\n//     name: 'employee-table',\n//   }\nexport default {\n  name: 'shapefile-table',\n  props: {\n    shapefile: Array,\n  },\n  data() {\n    return {\n      editing: null,\n    };\n  },\n  methods: {\n    // editMode(employee) {\n    //   // this.editing = id\n    //   this.cachedEmployee = Object.assign({}, employee);\n    //   this.editing = employee.id;\n    // },\n    checkStatus(uploadId) {\n      uploadsClient\n        .getUpload({\n          uploadId: `${uploadId}`,\n        })\n        .send()\n        .then((response) => {\n          const status = response.body;\n          console.log(status);\n        });\n    },\n    async createMaps(id) {\n      const map = new mapboxgl.Map({\n        container: `map${id}`, // container ID\n        style: 'mapbox://styles/mapbox/streets-v11', // style URL\n        center: [-122.272781, 37.871666], // starting position [lng, lat]\n        zoom: 15, // starting zoom\n      });\n      map.on('load', () => {\n        map.addSource('parks', {\n          type: 'vector',\n          url: `mapbox://yiqingggg.myTileset${id}`,\n        });\n        map.addLayer({\n          id: 'parks',\n          type: 'line',\n          source: 'parks',\n          'source-layer': `UPLOAD${id}`,\n          layout: {\n            // Make the layer visible by default.\n            visibility: 'visible',\n            'line-join': 'round',\n            'line-cap': 'round',\n          },\n          paint: {\n            'line-color': '#877b59',\n            'line-width': 20,\n          },\n        });\n      });\n    },\n    cancelEdit(employee) {\n      Object.assign(employee, this.cachedEmployee);\n      this.editing = null;\n    },\n    editEmployee(employee) {\n      if (employee.name === '' || employee.email === '') return;\n      this.$emit('edit:employee', employee.id, employee);\n      this.editing = null;\n    },\n  },\n};\n</script>\n\n<style scoped>\nbutton {\n  margin: 0 0.5rem 0 0;\n}\n</style>\n"]}]}