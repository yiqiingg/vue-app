{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/App.vue","mtime":1632429868297},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/babel-loader/lib/index.js","mtime":1632429635042},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFbXBsb3llZVRhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9FbXBsb3llZVRhYmxlLnZ1ZSc7Ci8vIGltcG9ydCBFbXBsb3llZVRhYmxlIGZyb20gJy4vY29tcG9uZW50cy9FbXBsb3llZVRhYmxlLnZ1ZScKaW1wb3J0IEVtcGxveWVlRm9ybSBmcm9tICdAL2NvbXBvbmVudHMvRW1wbG95ZWVGb3JtLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYXBwJywKICBjb21wb25lbnRzOiB7CiAgICBFbXBsb3llZVRhYmxlLAogICAgRW1wbG95ZWVGb3JtLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVtcGxveWVlczogW10sCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0RW1wbG95ZWVzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBhZGRFbXBsb3llZShlbXBsb3llZSkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goCiAgICAgICAgICAnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzJywKICAgICAgICAgIHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGVtcGxveWVlKSwKICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnIH0sCiAgICAgICAgICB9CiAgICAgICAgKTsKICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwogICAgICAgIHRoaXMuZW1wbG95ZWVzID0gWy4uLnRoaXMuZW1wbG95ZWVzLCBkYXRhXTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGdldEVtcGxveWVlcygpIHsKICAgICAgLy8gY29uc3QgbGFzdElkID0KICAgICAgLy8gICB0aGlzLmVtcGxveWVlcy5sZW5ndGggPiAwCiAgICAgIC8vICAgICA/IHRoaXMuZW1wbG95ZWVzW3RoaXMuZW1wbG95ZWVzLmxlbmd0aCAtIDFdLmlkCiAgICAgIC8vICAgICA6IDA7CiAgICAgIC8vIGNvbnN0IGlkID0gbGFzdElkICsgMTsKICAgICAgLy8gY29uc3QgbmV3RW1wbG95ZWUgPSB7IC4uLmVtcGxveWVlLCBpZCB9OwogICAgICAvLyB0aGlzLmVtcGxveWVlcyA9IFsuLi50aGlzLmVtcGxveWVlcywgbmV3RW1wbG95ZWVdOwogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goCiAgICAgICAgICAnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzJwogICAgICAgICk7CiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgICB0aGlzLmVtcGxveWVlcyA9IGRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICAvLyBkZWxldGVFbXBsb3llZShpZCkgewogICAgLy8gICB0aGlzLmVtcGxveWVlcyA9IHRoaXMuZW1wbG95ZWVzLmZpbHRlcigKICAgIC8vICAgICBlbXBsb3llZSA9PiBlbXBsb3llZS5pZCAhPT0gaWQKICAgIC8vICAgKQogICAgLy8gfSwKICAgIGFzeW5jIGRlbGV0ZUVtcGxveWVlKGlkKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgZmV0Y2goYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS91c2Vycy8ke2lkfWAsIHsKICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5lbXBsb3llZXMgPSB0aGlzLmVtcGxveWVlcy5maWx0ZXIoCiAgICAgICAgICAoZW1wbG95ZWUpID0+IGVtcGxveWVlLmlkICE9PSBpZAogICAgICAgICk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBlZGl0RW1wbG95ZWUoaWQsIHVwZGF0ZWRFbXBsb3llZSkgewogICAgICAvLyB0aGlzLmVtcGxveWVlcyA9IHRoaXMuZW1wbG95ZWVzLm1hcChlbXBsb3llZSA9PgogICAgICAvLyAgIGVtcGxveWVlLmlkID09PSBpZD8gdXBkYXRlZEVtcGxveWVlIDogZW1wbG95ZWUKICAgICAgLy8gKQogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goCiAgICAgICAgICBgaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzLyR7aWR9YCwKICAgICAgICAgIHsKICAgICAgICAgICAgbWV0aG9kOiAnUFVUJywKICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXBkYXRlZEVtcGxveWVlKSwKICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnIH0sCiAgICAgICAgICB9CiAgICAgICAgKTsKICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwogICAgICAgIHRoaXMuZW1wbG95ZWVzID0gdGhpcy5lbXBsb3llZXMubWFwKChlbXBsb3llZSkgPT4KICAgICAgICAgIGVtcGxveWVlLmlkID09PSBpZCA/IGRhdGEgOiBlbXBsb3llZQogICAgICAgICk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Visualize a Shapefile from Berkeley</h1>\n\n    <employee-form @add:employee=\"addEmployee\" />\n    <employee-table\n      :employees=\"employees\"\n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n    />\n    <!-- <employee-table /> -->\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from '@/components/EmployeeTable.vue';\n// import EmployeeTable from './components/EmployeeTable.vue'\nimport EmployeeForm from '@/components/EmployeeForm.vue';\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      employees: [],\n    };\n  },\n  mounted() {\n    this.getEmployees();\n  },\n  methods: {\n    async addEmployee(employee) {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users',\n          {\n            method: 'POST',\n            body: JSON.stringify(employee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = [...this.employees, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getEmployees() {\n      // const lastId =\n      //   this.employees.length > 0\n      //     ? this.employees[this.employees.length - 1].id\n      //     : 0;\n      // const id = lastId + 1;\n      // const newEmployee = { ...employee, id };\n      // this.employees = [...this.employees, newEmployee];\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users'\n        );\n        const data = await response.json();\n        this.employees = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // deleteEmployee(id) {\n    //   this.employees = this.employees.filter(\n    //     employee => employee.id !== id\n    //   )\n    // },\n    async deleteEmployee(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'DELETE',\n        });\n        this.employees = this.employees.filter(\n          (employee) => employee.id !== id\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async editEmployee(id, updatedEmployee) {\n      // this.employees = this.employees.map(employee =>\n      //   employee.id === id? updatedEmployee : employee\n      // )\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`,\n          {\n            method: 'PUT',\n            body: JSON.stringify(updatedEmployee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = this.employees.map((employee) =>\n          employee.id === id ? data : employee\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\n.small-container {\n  max-width: 680px;\n}\n</style>\n"]}]}