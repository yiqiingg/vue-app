{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/App.vue","mtime":1632429868297},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/css-loader/dist/cjs.js","mtime":1632429635351},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1632429636569},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/postcss-loader/src/index.js","mtime":1632429635993},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpidXR0b24gewogIGJhY2tncm91bmQ6ICMwMDk0MzU7CiAgYm9yZGVyOiAxcHggc29saWQgIzAwOTQzNTsKfQouc21hbGwtY29udGFpbmVyIHsKICBtYXgtd2lkdGg6IDY4MHB4Owp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Visualize a Shapefile from Berkeley</h1>\n\n    <employee-form @add:employee=\"addEmployee\" />\n    <employee-table\n      :employees=\"employees\"\n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n    />\n    <!-- <employee-table /> -->\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from '@/components/EmployeeTable.vue';\n// import EmployeeTable from './components/EmployeeTable.vue'\nimport EmployeeForm from '@/components/EmployeeForm.vue';\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      employees: [],\n    };\n  },\n  mounted() {\n    this.getEmployees();\n  },\n  methods: {\n    async addEmployee(employee) {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users',\n          {\n            method: 'POST',\n            body: JSON.stringify(employee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = [...this.employees, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getEmployees() {\n      // const lastId =\n      //   this.employees.length > 0\n      //     ? this.employees[this.employees.length - 1].id\n      //     : 0;\n      // const id = lastId + 1;\n      // const newEmployee = { ...employee, id };\n      // this.employees = [...this.employees, newEmployee];\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users'\n        );\n        const data = await response.json();\n        this.employees = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // deleteEmployee(id) {\n    //   this.employees = this.employees.filter(\n    //     employee => employee.id !== id\n    //   )\n    // },\n    async deleteEmployee(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'DELETE',\n        });\n        this.employees = this.employees.filter(\n          (employee) => employee.id !== id\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async editEmployee(id, updatedEmployee) {\n      // this.employees = this.employees.map(employee =>\n      //   employee.id === id? updatedEmployee : employee\n      // )\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`,\n          {\n            method: 'PUT',\n            body: JSON.stringify(updatedEmployee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = this.employees.map((employee) =>\n          employee.id === id ? data : employee\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\n.small-container {\n  max-width: 680px;\n}\n</style>\n"]}]}