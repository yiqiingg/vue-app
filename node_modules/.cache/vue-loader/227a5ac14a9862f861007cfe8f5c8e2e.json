{"remainingRequest":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/vue-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/vue-app/src/App.vue","mtime":1631852889425},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/babel-loader/lib/index.js","mtime":1623991178718},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js","mtime":1631742056592}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFbXBsb3llZVRhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9FbXBsb3llZVRhYmxlLnZ1ZSc7CmltcG9ydCBFbXBsb3llZUZvcm0gZnJvbSAnQC9jb21wb25lbnRzL0VtcGxveWVlRm9ybS52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdhcHAnLAogIGNvbXBvbmVudHM6IHsKICAgIEVtcGxveWVlVGFibGUsCiAgICBFbXBsb3llZUZvcm0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hhcGVmaWxlczogWwogICAgICAgIHsKICAgICAgICAgIGlkOiAxLAogICAgICAgICAgbmFtZTogJ1JpY2hhcmQgSGVuZHJpY2tzJywKICAgICAgICAgIGZpbGU6ICdyaWNoYXJkQHBpZWRwaXBlci5jb20nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgaWQ6IDIsCiAgICAgICAgICBuYW1lOiAnQmVydHJhbSBHaWxmb3lsZScsCiAgICAgICAgICBmaWxlOiAnZ2lsZm95bGVAcGllZHBpcGVyLmNvbScsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBpZDogMywKICAgICAgICAgIG5hbWU6ICdEaW5lc2ggQ2h1Z3RhaScsCiAgICAgICAgICBmaWxlOiAnZGluZXNoQHBpZWRwaXBlci5jb20nLAogICAgICAgIH0sCiAgICAgIF0sCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0RW1wbG95ZWVzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBhZGRTaGFwZWZpbGUoZmlsZSkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goCiAgICAgICAgICAnaHR0cHM6Ly9hcGkubWFwYm94LmNvbS91cGxvYWRzL3YxL3lpcWluZ2dnZy9jcmVkZW50aWFscz9hY2Nlc3NfdG9rZW49c2suZXlKMUlqb2llV2x4YVc1bloyZG5JaXdpWVNJNkltTnJkRzUxTVhNM09UQTJPVzR6TUhBNWREWm1kalZvWlRVaWZRLnEyZHhtd0FRams5Zmc5TEFCalU5N2cnLAogICAgICAgICAgewogICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZmlsZSksCiAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyB9LAogICAgICAgICAgfQogICAgICAgICk7CiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhLCAnaGlpaSB0aGlzIGlzIHRoZSBkYXRhJyk7CiAgICAgICAgdGhpcy5zaGFwZWZpbGVzID0gWy4uLnRoaXMuc2hhcGVmaWxlcywgZGF0YV07CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBkZWxldGVFbXBsb3llZShpZCkgewogICAgICB0cnkgewogICAgICAgIGF3YWl0IGZldGNoKGBodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdXNlcnMvJHtpZH1gLCB7CiAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgICAgIH0pOwogICAgICAgIHRoaXMuZW1wbG95ZWVzID0gdGhpcy5lbXBsb3llZXMuZmlsdGVyKAogICAgICAgICAgKGVtcGxveWVlKSA9PiBlbXBsb3llZS5pZCAhPT0gaWQKICAgICAgICApOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZWRpdEVtcGxveWVlKGlkLCB1cGRhdGVkRW1wbG95ZWUpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKAogICAgICAgICAgYGh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS91c2Vycy8ke2lkfWAsCiAgICAgICAgICB7CiAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsCiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHVwZGF0ZWRFbXBsb3llZSksCiAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04JyB9LAogICAgICAgICAgfQogICAgICAgICk7CiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgICB0aGlzLmVtcGxveWVlcyA9IHRoaXMuZW1wbG95ZWVzLm1hcCgoZW1wbG95ZWUpID0+CiAgICAgICAgICBlbXBsb3llZS5pZCA9PT0gaWQgPyBkYXRhIDogZW1wbG95ZWUKICAgICAgICApOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZ2V0RW1wbG95ZWVzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goCiAgICAgICAgICAnaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzJwogICAgICAgICk7CiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgICB0aGlzLmVtcGxveWVlcyA9IGRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Visualize a Shapefile from Berkeley</h1>\n    <employee-form @add:shapefile=\"addShapefile\" />\n    <employee-table\n      :employees=\"employees\"\n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n    />\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from '@/components/EmployeeTable.vue';\nimport EmployeeForm from '@/components/EmployeeForm.vue';\n\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      shapefiles: [\n        {\n          id: 1,\n          name: 'Richard Hendricks',\n          file: 'richard@piedpiper.com',\n        },\n        {\n          id: 2,\n          name: 'Bertram Gilfoyle',\n          file: 'gilfoyle@piedpiper.com',\n        },\n        {\n          id: 3,\n          name: 'Dinesh Chugtai',\n          file: 'dinesh@piedpiper.com',\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.getEmployees();\n  },\n  methods: {\n    async addShapefile(file) {\n      try {\n        const response = await fetch(\n          'https://api.mapbox.com/uploads/v1/yiqingggg/credentials?access_token=sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdG51MXM3OTA2OW4zMHA5dDZmdjVoZTUifQ.q2dxmwAQjk9fg9LABjU97g',\n          {\n            method: 'POST',\n            body: JSON.stringify(file),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        console.log(data, 'hiii this is the data');\n        this.shapefiles = [...this.shapefiles, data];\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async deleteEmployee(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'DELETE',\n        });\n        this.employees = this.employees.filter(\n          (employee) => employee.id !== id\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async editEmployee(id, updatedEmployee) {\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`,\n          {\n            method: 'PUT',\n            body: JSON.stringify(updatedEmployee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = this.employees.map((employee) =>\n          employee.id === id ? data : employee\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getEmployees() {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users'\n        );\n        const data = await response.json();\n        this.employees = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\n\n.small-container {\n  max-width: 680px;\n}\n</style>\n"]}]}