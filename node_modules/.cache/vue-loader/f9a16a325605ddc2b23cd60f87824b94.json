{"remainingRequest":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/vue-app/src/components/EmployeeForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/vue-app/src/components/EmployeeForm.vue","mtime":1632434984851},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/babel-loader/lib/index.js","mtime":1623991178718},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js","mtime":1631742056592}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZW1wbG95ZWUtZm9ybScsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN1Ym1pdHRpbmc6IGZhbHNlLAogICAgICBlcnJvcjogZmFsc2UsCiAgICAgIHN1Y2Nlc3M6IGZhbHNlLAogICAgICBzaGFwZWZpbGU6IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBmaWxlOiAnJywKICAgICAgfSwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaW52YWxpZE5hbWUoKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2hhcGVmaWxlLm5hbWUpOwogICAgICByZXR1cm4gdGhpcy5zaGFwZWZpbGUubmFtZSA9PT0gJyc7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgdXBsb2FkRmlsZVNhdmUoZXZlbnQpIHsKICAgICAgY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LmZpbGVzWzBdKTsKICAgICAgdGhpcy5zaGFwZWZpbGUuZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgIH0sCiAgICBhc3luYyBjcmVhdGVGaWxlVXBsb2FkKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLnNoYXBlZmlsZSk7CiAgICAgIHRoaXMuc3VibWl0dGluZyA9IHRydWU7CiAgICAgIHRoaXMuY2xlYXJTdGF0dXMoKTsKICAgICAgY29uc3QgTVlfQUNDRVNTX1RPS0VOID0KICAgICAgICAnc2suZXlKMUlqb2llV2x4YVc1bloyZG5JaXdpWVNJNkltTnJkSGhtYTNaaVl6QnJNWFF5Ym5Sb2VtRmtPVGxoTVc0aWZRLkZlMFhodllLc2M1QTlNbUU4eEQ3T1EnOwogICAgICBjb25zdCBtYnhVcGxvYWRzID0gcmVxdWlyZSgnQG1hcGJveC9tYXBib3gtc2RrL3NlcnZpY2VzL3VwbG9hZHMnKTsKICAgICAgY29uc3QgbWJ4Q2xpZW50ID0gcmVxdWlyZSgnQG1hcGJveC9tYXBib3gtc2RrJyk7CiAgICAgIGNvbnN0IGJhc2VDbGllbnQgPSBtYnhDbGllbnQoeyBhY2Nlc3NUb2tlbjogTVlfQUNDRVNTX1RPS0VOIH0pOwogICAgICBjb25zdCB1cGxvYWRzQ2xpZW50ID0gbWJ4VXBsb2FkcyhiYXNlQ2xpZW50KTsKCiAgICAgIGNvbnN0IEFXUyA9IHJlcXVpcmUoJ2F3cy1zZGsnKTsKICAgICAgY29uc3QgZ2V0Q3JlZGVudGlhbHMgPSAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHVwbG9hZHNDbGllbnQKICAgICAgICAgIC5jcmVhdGVVcGxvYWRDcmVkZW50aWFscygpCiAgICAgICAgICAuc2VuZCgpCiAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmJvZHkpOwogICAgICB9OwogICAgICB0aGlzLnNoYXBlZmlsZSA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBmaWxlOiAnJywKICAgICAgfTsKICAgICAgdGhpcy5lcnJvciA9IGZhbHNlOwogICAgICB0aGlzLnN1Y2Nlc3MgPSB0cnVlOwogICAgICB0aGlzLnN1Ym1pdHRpbmcgPSBmYWxzZTsKICAgICAgY29uc3QgcHV0RmlsZU9uUzMgPSAoY3JlZGVudGlhbHMpID0+IHsKICAgICAgICBjb25zdCBzMyA9IG5ldyBBV1MuUzMoewogICAgICAgICAgYWNjZXNzS2V5SWQ6IGNyZWRlbnRpYWxzLmFjY2Vzc0tleUlkLAogICAgICAgICAgc2VjcmV0QWNjZXNzS2V5OiBjcmVkZW50aWFscy5zZWNyZXRBY2Nlc3NLZXksCiAgICAgICAgICBzZXNzaW9uVG9rZW46IGNyZWRlbnRpYWxzLnNlc3Npb25Ub2tlbiwKICAgICAgICAgIHJlZ2lvbjogJ3VzLWVhc3QtMScsCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIHMzCiAgICAgICAgICAucHV0T2JqZWN0KHsKICAgICAgICAgICAgQnVja2V0OiBjcmVkZW50aWFscy5idWNrZXQsCiAgICAgICAgICAgIEtleTogY3JlZGVudGlhbHMua2V5LAogICAgICAgICAgICBCb2R5OiB0aGlzLnNoYXBlZmlsZS5maWxlLAogICAgICAgICAgfSkKICAgICAgICAgIC5wcm9taXNlKCk7CiAgICAgIH07CiAgICAgIGNvbnN0IGNyZWRlbnRpYWxzID0gYXdhaXQgZ2V0Q3JlZGVudGlhbHMoKTsKICAgICAgcHV0RmlsZU9uUzMoY3JlZGVudGlhbHMpOwogICAgICBjb25zb2xlLmxvZyhjcmVkZW50aWFscyk7CiAgICAgIC8vIGNvbnN0IG15VXNlcm5hbWUgPSAneWlxaW5nZ2dnJzsKICAgICAgLy8gY29uc3QgbXlUaWxlc2V0ID0gJ215VGlsZXNldCc7CgogICAgICBhd2FpdCB1cGxvYWRzQ2xpZW50CiAgICAgICAgLmNyZWF0ZVVwbG9hZCh7CiAgICAgICAgICB0aWxlc2V0OiBgeWlxaW5nZ2dnLm15VGlsZXNldGAsCiAgICAgICAgICB1cmw6CiAgICAgICAgICAgICdodHRwczovL3RpbGVzdHJlYW0tdGlsZXNldHMtcHJvZHVjdGlvbi5zMy5hbWF6b25hd3MuY29tLzgwL19wZW5kaW5nL2ZrZmljOGhwcW43MmlwaDEzMmpsZnh0a2MveWlxaW5nZ2dnJywKICAgICAgICAgIG5hbWU6IGB0ZXN0YCwKICAgICAgICB9KQogICAgICAgIC5zZW5kKCkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIGNvbnN0IHVwbG9hZCA9IHJlc3BvbnNlLmJvZHk7CiAgICAgICAgICBjb25zb2xlLmxvZyh1cGxvYWQpOwogICAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZygnZG9uZScpOwogICAgfSwKCiAgICBjbGVhclN0YXR1cygpIHsKICAgICAgdGhpcy5zdWNjZXNzID0gZmFsc2U7CiAgICAgIHRoaXMuZXJyb3IgPSBmYWxzZTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["EmployeeForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"EmployeeForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"employee-form\">\n    <form @submit.prevent=\"createFileUpload\">\n      <label>Shapefile name</label>\n      <input v-model=\"shapefile.name\" type=\"text\" />\n      <label>Upload Shapefile</label>\n      <input type=\"file\" @change=\"uploadFileSave\" name=\"uploadFile\" required />\n      <p v-if=\"error && submitting\" class=\"error-message\">\n        ❗Please fill out all required fields\n      </p>\n      <p v-if=\"success\" class=\"success-message\">\n        ✅ File successfully added\n      </p>\n      <button>Add File</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'employee-form',\n  data() {\n    return {\n      submitting: false,\n      error: false,\n      success: false,\n      shapefile: {\n        name: '',\n        file: '',\n      },\n    };\n  },\n  computed: {\n    invalidName() {\n      console.log(this.shapefile.name);\n      return this.shapefile.name === '';\n    },\n  },\n  methods: {\n    uploadFileSave(event) {\n      console.log(event.target.files[0]);\n      this.shapefile.file = event.target.files[0];\n    },\n    async createFileUpload() {\n      console.log(this.shapefile);\n      this.submitting = true;\n      this.clearStatus();\n      const MY_ACCESS_TOKEN =\n        'sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHhma3ZiYzBrMXQybnRoemFkOTlhMW4ifQ.Fe0XhvYKsc5A9MmE8xD7OQ';\n      const mbxUploads = require('@mapbox/mapbox-sdk/services/uploads');\n      const mbxClient = require('@mapbox/mapbox-sdk');\n      const baseClient = mbxClient({ accessToken: MY_ACCESS_TOKEN });\n      const uploadsClient = mbxUploads(baseClient);\n\n      const AWS = require('aws-sdk');\n      const getCredentials = () => {\n        return uploadsClient\n          .createUploadCredentials()\n          .send()\n          .then((response) => response.body);\n      };\n      this.shapefile = {\n        name: '',\n        file: '',\n      };\n      this.error = false;\n      this.success = true;\n      this.submitting = false;\n      const putFileOnS3 = (credentials) => {\n        const s3 = new AWS.S3({\n          accessKeyId: credentials.accessKeyId,\n          secretAccessKey: credentials.secretAccessKey,\n          sessionToken: credentials.sessionToken,\n          region: 'us-east-1',\n        });\n        return s3\n          .putObject({\n            Bucket: credentials.bucket,\n            Key: credentials.key,\n            Body: this.shapefile.file,\n          })\n          .promise();\n      };\n      const credentials = await getCredentials();\n      putFileOnS3(credentials);\n      console.log(credentials);\n      // const myUsername = 'yiqingggg';\n      // const myTileset = 'myTileset';\n\n      await uploadsClient\n        .createUpload({\n          tileset: `yiqingggg.myTileset`,\n          url:\n            'https://tilestream-tilesets-production.s3.amazonaws.com/80/_pending/fkfic8hpqn72iph132jlfxtkc/yiqingggg',\n          name: `test`,\n        })\n        .send()\n        .then((response) => {\n          const upload = response.body;\n          console.log(upload);\n        });\n      console.log('done');\n    },\n\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\nform {\n  margin-bottom: 2rem;\n}\n\n[class*='-message'] {\n  font-weight: 500;\n}\n\n.error-message {\n  color: #d33c40;\n}\n\n.success-message {\n  color: #32a95d;\n}\n</style>\n"]}]}