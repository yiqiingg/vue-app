{"remainingRequest":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/vue-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/vue-app/src/App.vue","mtime":1632354789284},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/css-loader/dist/cjs.js","mtime":1623991179493},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631742056592},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/postcss-loader/src/index.js","mtime":1623386772312},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js","mtime":1631742056592}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYnV0dG9uIHsKICBiYWNrZ3JvdW5kOiAjMDA5NDM1OwogIGJvcmRlcjogMXB4IHNvbGlkICMwMDk0MzU7Cn0KCi5zbWFsbC1jb250YWluZXIgewogIG1heC13aWR0aDogNjgwcHg7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Visualize a Shapefile from Berkeley</h1>\n    <employee-form @add:shapefile=\"createUpload\" />\n    <employee-table\n      :employees=\"employees\"\n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n    />\n  </div>\n</template>\n\n<script>\nimport dotenv from 'dotenv';\n\ndotenv.config();\nimport EmployeeTable from '@/components/EmployeeTable.vue';\nimport EmployeeForm from '@/components/EmployeeForm.vue';\n\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      shapefiles: [\n        {\n          id: 1,\n          name: 'Richard Hendricks',\n          file: 'richard@piedpiper.com',\n        },\n        {\n          id: 2,\n          name: 'Bertram Gilfoyle',\n          file: 'gilfoyle@piedpiper.com',\n        },\n        {\n          id: 3,\n          name: 'Dinesh Chugtai',\n          file: 'dinesh@piedpiper.com',\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.getEmployees();\n  },\n  methods: {\n    async addShapefile(file) {\n      try {\n        const response = await fetch(\n          'https://api.mapbox.com/uploads/v1/yiqingggg/credentials?access_token=sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdG51MXM3OTA2OW4zMHA5dDZmdjVoZTUifQ.q2dxmwAQjk9fg9LABjU97g',\n          {\n            method: 'POST',\n            body: JSON.stringify(file),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        console.log(data, 'hiii this is the data');\n        return data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async createUpload(file) {\n      try {\n        this.shapefiles = [...this.shapefiles, file];\n        const credentials = await this.addShapefile(file);\n        const response = await fetch(\n          'https://api.mapbox.com/uploads/v1/yiqingggg',\n          {\n            body: {\n              url: `http://${credentials.bucket}.s3.amazonaws.com/${credentials.key}`,\n              tileset: `yiqingggg.${file.name}`,\n            },\n            headers: {\n              'Access-Control-Allow-Headers':\n                'Access-Control-Allow-Headers, Access-Control-Allow-Origin, Content-Type, Access-Control-Request-Headers',\n              //'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers',\n              'Access-Control-Allow-Origin': `http://localhost:8080/`,\n              // 'Access-Control-Allow-Credentials': 'true',\n              'Access-Control-Request-Methods': 'GET,HEAD,OPTIONS,POST,PUT',\n              // 'Access-Control-Request-Methods': 'POST',\n              'Access-Control-Request-Headers':\n                'Access-Control-Allow-Headers, Access-Control-Allow-Origin, Content-Type, Access-Control-Request-Headers',\n              // 'Content-Type, Access-Control-Allow-Headers',\n              // 'Cache-Control': 'no-cache',\n              'Content-Type': 'application/json',\n            },\n            method: 'POST',\n          }\n        );\n        const data = await response.json();\n        console.log(data, 'upload dataaaa');\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async deleteEmployee(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'DELETE',\n        });\n        this.employees = this.employees.filter(\n          (employee) => employee.id !== id\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async editEmployee(id, updatedEmployee) {\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`,\n          {\n            method: 'PUT',\n            body: JSON.stringify(updatedEmployee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = this.employees.map((employee) =>\n          employee.id === id ? data : employee\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getEmployees() {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users'\n        );\n        const data = await response.json();\n        this.employees = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\n\n.small-container {\n  max-width: 680px;\n}\n</style>\n"]}]}