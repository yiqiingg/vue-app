{"remainingRequest":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/vue-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/vue-app/src/App.vue","mtime":1632354789284},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/babel-loader/lib/index.js","mtime":1623991178718},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1631742054846},{"path":"/Users/yiqing/Downloads/vue-test/vue-app/node_modules/vue-loader/lib/index.js","mtime":1631742056592}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JzsKCmRvdGVudi5jb25maWcoKTsKaW1wb3J0IEVtcGxveWVlVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL0VtcGxveWVlVGFibGUudnVlJzsKaW1wb3J0IEVtcGxveWVlRm9ybSBmcm9tICdAL2NvbXBvbmVudHMvRW1wbG95ZWVGb3JtLnZ1ZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2FwcCcsCiAgY29tcG9uZW50czogewogICAgRW1wbG95ZWVUYWJsZSwKICAgIEVtcGxveWVlRm9ybSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzaGFwZWZpbGVzOiBbCiAgICAgICAgewogICAgICAgICAgaWQ6IDEsCiAgICAgICAgICBuYW1lOiAnUmljaGFyZCBIZW5kcmlja3MnLAogICAgICAgICAgZmlsZTogJ3JpY2hhcmRAcGllZHBpcGVyLmNvbScsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBpZDogMiwKICAgICAgICAgIG5hbWU6ICdCZXJ0cmFtIEdpbGZveWxlJywKICAgICAgICAgIGZpbGU6ICdnaWxmb3lsZUBwaWVkcGlwZXIuY29tJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGlkOiAzLAogICAgICAgICAgbmFtZTogJ0RpbmVzaCBDaHVndGFpJywKICAgICAgICAgIGZpbGU6ICdkaW5lc2hAcGllZHBpcGVyLmNvbScsCiAgICAgICAgfSwKICAgICAgXSwKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5nZXRFbXBsb3llZXMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGFkZFNoYXBlZmlsZShmaWxlKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgKICAgICAgICAgICdodHRwczovL2FwaS5tYXBib3guY29tL3VwbG9hZHMvdjEveWlxaW5nZ2dnL2NyZWRlbnRpYWxzP2FjY2Vzc190b2tlbj1zay5leUoxSWpvaWVXbHhhVzVuWjJkbklpd2lZU0k2SW1OcmRHNTFNWE0zT1RBMk9XNHpNSEE1ZERabWRqVm9aVFVpZlEucTJkeG13QVFqazlmZzlMQUJqVTk3ZycsCiAgICAgICAgICB7CiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShmaWxlKSwKICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnIH0sCiAgICAgICAgICB9CiAgICAgICAgKTsKICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwogICAgICAgIGNvbnNvbGUubG9nKGRhdGEsICdoaWlpIHRoaXMgaXMgdGhlIGRhdGEnKTsKICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGNyZWF0ZVVwbG9hZChmaWxlKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5zaGFwZWZpbGVzID0gWy4uLnRoaXMuc2hhcGVmaWxlcywgZmlsZV07CiAgICAgICAgY29uc3QgY3JlZGVudGlhbHMgPSBhd2FpdCB0aGlzLmFkZFNoYXBlZmlsZShmaWxlKTsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKAogICAgICAgICAgJ2h0dHBzOi8vYXBpLm1hcGJveC5jb20vdXBsb2Fkcy92MS95aXFpbmdnZ2cnLAogICAgICAgICAgewogICAgICAgICAgICBib2R5OiB7CiAgICAgICAgICAgICAgdXJsOiBgaHR0cDovLyR7Y3JlZGVudGlhbHMuYnVja2V0fS5zMy5hbWF6b25hd3MuY29tLyR7Y3JlZGVudGlhbHMua2V5fWAsCiAgICAgICAgICAgICAgdGlsZXNldDogYHlpcWluZ2dnZy4ke2ZpbGUubmFtZX1gLAogICAgICAgICAgICB9LAogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOgogICAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMsIEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiwgQ29udGVudC1UeXBlLCBBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnMnLAogICAgICAgICAgICAgIC8vJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMsIE9yaWdpbixBY2NlcHQsIFgtUmVxdWVzdGVkLVdpdGgsIENvbnRlbnQtVHlwZSwgQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1NZXRob2QsIEFjY2Vzcy1Db250cm9sLVJlcXVlc3QtSGVhZGVycycsCiAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6IGBodHRwOi8vbG9jYWxob3N0OjgwODAvYCwKICAgICAgICAgICAgICAvLyAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHMnOiAndHJ1ZScsCiAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLVJlcXVlc3QtTWV0aG9kcyc6ICdHRVQsSEVBRCxPUFRJT05TLFBPU1QsUFVUJywKICAgICAgICAgICAgICAvLyAnQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1NZXRob2RzJzogJ1BPU1QnLAogICAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnMnOgogICAgICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMsIEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbiwgQ29udGVudC1UeXBlLCBBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnMnLAogICAgICAgICAgICAgIC8vICdDb250ZW50LVR5cGUsIEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLAogICAgICAgICAgICAgIC8vICdDYWNoZS1Db250cm9sJzogJ25vLWNhY2hlJywKICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICB9LAogICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgIH0KICAgICAgICApOwogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgY29uc29sZS5sb2coZGF0YSwgJ3VwbG9hZCBkYXRhYWFhJyk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZGVsZXRlRW1wbG95ZWUoaWQpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBmZXRjaChgaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL3VzZXJzLyR7aWR9YCwgewogICAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICB9KTsKICAgICAgICB0aGlzLmVtcGxveWVlcyA9IHRoaXMuZW1wbG95ZWVzLmZpbHRlcigKICAgICAgICAgIChlbXBsb3llZSkgPT4gZW1wbG95ZWUuaWQgIT09IGlkCiAgICAgICAgKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGVkaXRFbXBsb3llZShpZCwgdXBkYXRlZEVtcGxveWVlKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgKICAgICAgICAgIGBodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vdXNlcnMvJHtpZH1gLAogICAgICAgICAgewogICAgICAgICAgICBtZXRob2Q6ICdQVVQnLAogICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1cGRhdGVkRW1wbG95ZWUpLAogICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD1VVEYtOCcgfSwKICAgICAgICAgIH0KICAgICAgICApOwogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgdGhpcy5lbXBsb3llZXMgPSB0aGlzLmVtcGxveWVlcy5tYXAoKGVtcGxveWVlKSA9PgogICAgICAgICAgZW1wbG95ZWUuaWQgPT09IGlkID8gZGF0YSA6IGVtcGxveWVlCiAgICAgICAgKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGdldEVtcGxveWVlcygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKAogICAgICAgICAgJ2h0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS91c2VycycKICAgICAgICApOwogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgdGhpcy5lbXBsb3llZXMgPSBkYXRhOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Visualize a Shapefile from Berkeley</h1>\n    <employee-form @add:shapefile=\"createUpload\" />\n    <employee-table\n      :employees=\"employees\"\n      @delete:employee=\"deleteEmployee\"\n      @edit:employee=\"editEmployee\"\n    />\n  </div>\n</template>\n\n<script>\nimport dotenv from 'dotenv';\n\ndotenv.config();\nimport EmployeeTable from '@/components/EmployeeTable.vue';\nimport EmployeeForm from '@/components/EmployeeForm.vue';\n\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      shapefiles: [\n        {\n          id: 1,\n          name: 'Richard Hendricks',\n          file: 'richard@piedpiper.com',\n        },\n        {\n          id: 2,\n          name: 'Bertram Gilfoyle',\n          file: 'gilfoyle@piedpiper.com',\n        },\n        {\n          id: 3,\n          name: 'Dinesh Chugtai',\n          file: 'dinesh@piedpiper.com',\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.getEmployees();\n  },\n  methods: {\n    async addShapefile(file) {\n      try {\n        const response = await fetch(\n          'https://api.mapbox.com/uploads/v1/yiqingggg/credentials?access_token=sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdG51MXM3OTA2OW4zMHA5dDZmdjVoZTUifQ.q2dxmwAQjk9fg9LABjU97g',\n          {\n            method: 'POST',\n            body: JSON.stringify(file),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        console.log(data, 'hiii this is the data');\n        return data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async createUpload(file) {\n      try {\n        this.shapefiles = [...this.shapefiles, file];\n        const credentials = await this.addShapefile(file);\n        const response = await fetch(\n          'https://api.mapbox.com/uploads/v1/yiqingggg',\n          {\n            body: {\n              url: `http://${credentials.bucket}.s3.amazonaws.com/${credentials.key}`,\n              tileset: `yiqingggg.${file.name}`,\n            },\n            headers: {\n              'Access-Control-Allow-Headers':\n                'Access-Control-Allow-Headers, Access-Control-Allow-Origin, Content-Type, Access-Control-Request-Headers',\n              //'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers',\n              'Access-Control-Allow-Origin': `http://localhost:8080/`,\n              // 'Access-Control-Allow-Credentials': 'true',\n              'Access-Control-Request-Methods': 'GET,HEAD,OPTIONS,POST,PUT',\n              // 'Access-Control-Request-Methods': 'POST',\n              'Access-Control-Request-Headers':\n                'Access-Control-Allow-Headers, Access-Control-Allow-Origin, Content-Type, Access-Control-Request-Headers',\n              // 'Content-Type, Access-Control-Allow-Headers',\n              // 'Cache-Control': 'no-cache',\n              'Content-Type': 'application/json',\n            },\n            method: 'POST',\n          }\n        );\n        const data = await response.json();\n        console.log(data, 'upload dataaaa');\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async deleteEmployee(id) {\n      try {\n        await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n          method: 'DELETE',\n        });\n        this.employees = this.employees.filter(\n          (employee) => employee.id !== id\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async editEmployee(id, updatedEmployee) {\n      try {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`,\n          {\n            method: 'PUT',\n            body: JSON.stringify(updatedEmployee),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          }\n        );\n        const data = await response.json();\n        this.employees = this.employees.map((employee) =>\n          employee.id === id ? data : employee\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getEmployees() {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users'\n        );\n        const data = await response.json();\n        this.employees = data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n};\n</script>\n\n<style>\nbutton {\n  background: #009435;\n  border: 1px solid #009435;\n}\n\n.small-container {\n  max-width: 680px;\n}\n</style>\n"]}]}