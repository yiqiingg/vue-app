{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/EmployeeTable.vue?vue&type=style&index=0&id=45e085c0&scoped=true&lang=css&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/EmployeeTable.vue","mtime":1632782130942},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/css-loader/dist/cjs.js","mtime":1632429635351},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1632429636569},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/postcss-loader/src/index.js","mtime":1632429635993},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYnV0dG9uIHsKICBtYXJnaW46IDAgMC41cmVtIDAgMDsKfQo="},{"version":3,"sources":["EmployeeTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA","file":"EmployeeTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"shapefile-table\">\n    <p v-if=\"shapefile.length() < 1\" class=\"empty-table\">\n      No Files\n    </p>\n    <table v-else>\n      <thead>\n        <tr>\n          <th>Shapefile name</th>\n          <th>Map</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <!-- <tbody> -->\n      <!-- <tr> \n          <td>Richard Hendricks</td>\n          <td>richard@piedpiper.com</td>\n        </tr>\n        <tr>\n          <td>Bertram Gilfoyle</td>\n          <td>gilfoyle@piedpiper.com</td>\n        </tr>\n        <tr>\n          <td>Dinesh Chugtai</td>\n          <td>dinesh@piedpiper.com</td> -->\n      <tbody>\n        <tr v-for=\"file in shapefile\" :key=\"file.id\">\n          <td>{{ employee.name }}</td>\n          <td :id=\"'map' + file.id\" />\n          <td>\n            <button @click=\"checkStatus(file.uploadId)\">Status</button>\n            <button class=\"muted-button\" @click=\"editing = null\">Map</button>\n          </td>\n        </tr>\n      </tbody>\n      <!-- </tr> -->\n      <!-- </tbody> -->\n    </table>\n  </div>\n</template>\n\n<script>\nconst MY_ACCESS_TOKEN =\n  'sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHhma3ZiYzBrMXQybnRoemFkOTlhMW4ifQ.Fe0XhvYKsc5A9MmE8xD7OQ';\nconst mbxUploads = require('@mapbox/mapbox-sdk/services/uploads');\nconst mbxClient = require('@mapbox/mapbox-sdk');\nconst baseClient = mbxClient({ accessToken: MY_ACCESS_TOKEN });\nconst uploadsClient = mbxUploads(baseClient);\n// let uploadId;\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken =\n  'pk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHkwM2w1cTJ5dWgydnBtdWx4MXFlN3EifQ.WoSz2Zn-h7SkdDmouxC0XQ';\n//   export default {\n//     name: 'employee-table',\n//   }\nexport default {\n  name: 'shapefile-table',\n  props: {\n    shapefile: Array,\n  },\n  data() {\n    return {\n      editing: null,\n    };\n  },\n  methods: {\n    // editMode(employee) {\n    //   // this.editing = id\n    //   this.cachedEmployee = Object.assign({}, employee);\n    //   this.editing = employee.id;\n    // },\n    checkStatus(uploadId) {\n      uploadsClient\n        .getUpload({\n          uploadId: `${uploadId}`,\n        })\n        .send()\n        .then((response) => {\n          const status = response.body;\n          console.log(status);\n        });\n    },\n    cancelEdit(employee) {\n      Object.assign(employee, this.cachedEmployee);\n      this.editing = null;\n    },\n    editEmployee(employee) {\n      if (employee.name === '' || employee.email === '') return;\n      this.$emit('edit:employee', employee.id, employee);\n      this.editing = null;\n    },\n  },\n};\n</script>\n\n<style scoped>\nbutton {\n  margin: 0 0.5rem 0 0;\n}\n</style>\n"]}]}