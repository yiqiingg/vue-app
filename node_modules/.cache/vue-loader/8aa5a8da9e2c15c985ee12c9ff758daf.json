{"remainingRequest":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/ShapefileForm.vue?vue&type=style&index=0&id=475f1281&scoped=true&lang=css&","dependencies":[{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/src/components/ShapefileForm.vue","mtime":1632783140681},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/css-loader/dist/cjs.js","mtime":1632429635351},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1632429636569},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/postcss-loader/src/index.js","mtime":1632429635993},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/cache-loader/dist/cjs.js","mtime":1632429635085},{"path":"/Users/yiqing/Downloads/vue-test/redo-mapbox-app/node_modules/vue-loader/lib/index.js","mtime":1632429636569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpmb3JtIHsKICBtYXJnaW4tYm90dG9tOiAycmVtOwp9CltjbGFzcyo9Jy1tZXNzYWdlJ10gewogIGZvbnQtd2VpZ2h0OiA1MDA7Cn0KLmVycm9yLW1lc3NhZ2UgewogIGNvbG9yOiAjZDMzYzQwOwp9Ci5zdWNjZXNzLW1lc3NhZ2UgewogIGNvbG9yOiAjMzJhOTVkOwp9Cg=="},{"version":3,"sources":["ShapefileForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ShapefileForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"shapefile-form\">\n    <label>Shapefile upload</label>\n    <form\n      class=\"upload\"\n      @submit.prevent=\"handleFileSubmit\"\n      @change=\"previewFiles\"\n    >\n      <label>File Name</label>\n      <input v-model=\"shapefiles.name\" type=\"text\" />\n      <input type=\"file\" name=\"uploadFile\" accept=\".zip\" required />\n      <br /><br />\n      <input type=\"submit\" />\n    </form>\n    <div id=\"map-component\" />\n  </div>\n</template>\n\n<script>\n// let tilesetid;\n// const MY_ACCESS_TOKEN =\n//   'sk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHhma3ZiYzBrMXQybnRoemFkOTlhMW4ifQ.Fe0XhvYKsc5A9MmE8xD7OQ';\n// const mbxUploads = require('@mapbox/mapbox-sdk/services/uploads');\n// const mbxClient = require('@mapbox/mapbox-sdk');\n// const baseClient = mbxClient({ accessToken: MY_ACCESS_TOKEN });\n// const uploadsClient = mbxUploads(baseClient);\n// // let uploadId;\n// import mapboxgl from 'mapbox-gl';\n// const AWS = require('aws-sdk');\n// mapboxgl.accessToken =\n//   'pk.eyJ1IjoieWlxaW5nZ2dnIiwiYSI6ImNrdHkwM2w1cTJ5dWgydnBtdWx4MXFlN3EifQ.WoSz2Zn-h7SkdDmouxC0XQ';\nexport default {\n  name: 'shapefile-form',\n  data() {\n    return {\n      submiting: false,\n      error: false,\n      success: false,\n      shapefiles: {\n        name: '',\n        id: '',\n      },\n      selectedFile: null,\n    };\n  },\n  methods: {\n    // async onPickFile() {\n    //   this.$refs.fileInput.click();\n    // },\n    async handleFileSubmit() {\n      this.submitting = true;\n      this.clearStatus();\n      this.$emit('add:shapefile', this.shapefiles);\n      this.shapefiles = {\n        name: '',\n        id: '',\n      };\n      this.error = false;\n      this.success = true;\n      this.submitting = false;\n    },\n    async previewFiles(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    handleSubmit() {\n      console.log('testing handleSubmit');\n      this.submitting = true;\n      this.clearStatus();\n      if (this.invalidName || this.invalidEmail) {\n        this.error = true;\n        return;\n      }\n      this.$emit('add:employee', this.employee);\n      this.$refs.first.focus();\n      this.employee = {\n        name: '',\n        email: '',\n      };\n      this.error = false;\n      this.success = true;\n      this.submitting = false;\n    },\n    clearStatus() {\n      this.success = false;\n      this.error = false;\n    },\n  },\n};\n//   export default {\n//     name: 'employee-form',\n//     data() {\n//       return {\n//         employee: {\n//           name: '',\n//           email: '',\n//         },\n//       }\n//     },\n//     methods: {\n//         handleSubmit() {\n//             console.log('testing handleSubmit')\n//         },\n//     },\n//   }\n</script>\n\n<style scoped>\nform {\n  margin-bottom: 2rem;\n}\n[class*='-message'] {\n  font-weight: 500;\n}\n.error-message {\n  color: #d33c40;\n}\n.success-message {\n  color: #32a95d;\n}\n</style>\n"]}]}